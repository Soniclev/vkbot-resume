using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using Microsoft.Extensions.DependencyInjection;
using VkBot.Features.Core.Images;

namespace VkBot.Features.MemeGenerator
{
    public class MemeGenerator : IMemeGenerator
    {
        private readonly string _memeDirectory = "Data/AutoGeneratedMemes/";

        private readonly IServiceProvider _serviceProvider;
        private readonly IImageRender _imageRender;

        public MemeGenerator(IServiceProvider serviceProvider)
        {
            _serviceProvider = serviceProvider;
            _imageRender = serviceProvider.GetService<IImageRender>();
        }

        public void Dispose()
        {
            _imageRender.Dispose();
        }

        public byte[] Generate(string memeName, long userId)
        {
            var task = new MemeTask(_serviceProvider);
            var memes = GetAvailableMemes();
            var meme = memes.First(x => x.Name == memeName);
            task.LoadMemeConfig(meme.ConfigPath);
            foreach (var command in task.MemeCommands)
            {
                command.Precache(userId);
                command.DoCommand(_imageRender);
            }

            return _imageRender.Render();
        }

        public IEnumerable<Meme> GetAvailableMemes()
        {
            var result = new List<Meme>();
            var dirs = Directory.GetDirectories(_memeDirectory);
            foreach (var dir in dirs)
            {
                var configPath = Path.Combine(dir, "config.txt");
                var titlePath = Path.Combine(dir, "title.txt");
                if (File.Exists(configPath) && File.Exists(titlePath))
                {
                    result.Add(new Meme(File.ReadAllText(titlePath, Encoding.UTF8), configPath));
                }
            }

            return result;
        }
    }
}
